name: Auto-build

on:
  push:
    branches: [ ts ]
    paths:
      - 'Il2cppHook/**'

jobs:
  auto_build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16

      - name: Install dependencies
        working-directory: Il2cppHook
        run: npm install

      - name: Build
        working-directory: Il2cppHook
        run: npm run build

      - name: Compress
        run: |
          cd Il2cppHook
          npm run compress

      # - name: Commit and push _Ufunc.js
      #   run: |
      #     git config user.name "axhlzy"
      #     git config user.email "axhlzy@live.cn"
      #     cd Il2cppHook
      #     git add -f _Ufunc.js
      #     git restore package.json
      #     git commit -m "auto generated"
      #     git push --force-with-lease

      - name: Upload _Ufunc.js as artifact
        uses: actions/upload-artifact
        with:
          name: Ufunc-artifact
          path: Il2cppHook/_Ufunc.js

  # check_version_and_publish:
  #   needs: auto_build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #       with:
  #         ref: ts
  #     - name: Setup Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: 14
  #         registry-url: https://npm.pkg.github.com/

  #     - name: Install dependencies
  #       run: npm install

  #     - name: Check for version change
  #       id: check_version
  #       run: |
  #         git fetch --depth=100 origin ts
  #         VERSION_CHANGED=$(git diff HEAD^ HEAD -- package.json | grep '"version"')
  #         if [ -n "$VERSION_CHANGED" ]; then
  #           echo "::set-output name=version_changed::true"
  #         else
  #           echo "::set-output name=version_changed::false"
  #         fi

  #     - name: Publish to npm
  #       if: steps.check_version.outputs.version_changed == 'true'
  #       run: |
  #         echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > .npmrc
  #         npm publish
  #         echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > .npmrc
  #         npm publish --registry https://registry.npmjs.org/
